#!/usr/bin/env python

import Pegasus.DAX3 as peg
import sys
import os

base_dir = sys.argv[1]
run_dir = sys.argv[2]

dax = peg.ADAG("sub")

# Add executables to the DAX-level replica catalog
taskB = peg.Executable(name="taskB.sh", arch="x86_64", installed=False)
taskB.addPFN(peg.PFN("file://" + base_dir + "/taskB.sh", "local"))
dax.addExecutable(taskB)


file_list = []
job = peg.Job(name="taskB.sh")

out_dir = run_dir + "/intermediate"
for filename in os.listdir(out_dir):

    # create Pegasus file objects
    input_file = peg.File(filename)
    input_file.addPFN(peg.PFN("file://" + out_dir + "/" + filename, "local"))
    dax.addFile(input_file)

    # files required/generated by the job
    job.uses(input_file, link=peg.Link.INPUT)
    job.addArguments(filename)

    file_list.append(input_file)

results_file = peg.File("final_output")
dax.addFile(results_file)
job.uses(results_file, link=peg.Link.OUTPUT)
dax.addJob(job)


# Write the DAX to stdout
f = open(run_dir + "/dax2.xml", "w")
dax.writeXML(f)
f.close()
